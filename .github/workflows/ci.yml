name: CI/CD Pipeline

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main]
  workflow_dispatch:
    inputs:
      environment:
        description: 'Environment to deploy to'
        required: false
        default: 'production'
        type: choice
        options:
          - production
          - preview
      skip_tests:
        description: 'Skip tests and run only deployment'
        required: false
        default: false
        type: boolean

jobs:
  quality-checks:
    name: Code Quality & Tests
    runs-on: ubuntu-latest
    if: github.event.inputs.skip_tests != 'true'

    strategy:
      matrix:
        node-version: [20]

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup pnpm
        uses: pnpm/action-setup@v2
        with:
          version: 10

      - name: Setup Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'pnpm'

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Validate environment variables
        run: pnpm env:validate
        env:
          NEXT_PUBLIC_APP_URL: https://resume-kappa-mocha.vercel.app
          NEXT_PUBLIC_APP_NAME: 'Liang-Yu Sun Portfolio'
          NEXT_PUBLIC_APP_DESCRIPTION: 'AI & Computer Vision Engineer Portfolio'
          NEXT_PUBLIC_ENABLE_ANALYTICS: false
          NEXT_PUBLIC_ENABLE_CONTACT_FORM: true
          NEXT_PUBLIC_ENABLE_BLOG: false
          NODE_ENV: development

      - name: Run ESLint
        run: pnpm lint

      - name: Run TypeScript type checking
        run: pnpm type-check

      - name: Run tests
        run: pnpm test:run

      - name: Generate test coverage
        run: pnpm test:coverage

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v3
        with:
          file: ./coverage/lcov.info
          flags: unittests
          name: codecov-umbrella

      - name: Build application
        run: pnpm build
        env:
          NODE_ENV: production
          NEXT_PUBLIC_APP_URL: https://resume-kappa-mocha.vercel.app
          NEXT_PUBLIC_APP_NAME: 'Liang-Yu Sun Portfolio'
          NEXT_PUBLIC_APP_DESCRIPTION: 'AI & Computer Vision Engineer Portfolio'
          NEXT_PUBLIC_ENABLE_ANALYTICS: false
          NEXT_PUBLIC_ENABLE_CONTACT_FORM: true
          NEXT_PUBLIC_ENABLE_BLOG: false

  lighthouse:
    name: Lighthouse Performance
    runs-on: ubuntu-latest
    needs: quality-checks
    if: (github.ref == 'refs/heads/main') && (github.event.inputs.skip_tests != 'true')

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup pnpm
        uses: pnpm/action-setup@v2
        with:
          version: 10

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'pnpm'

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Build application
        run: pnpm build
        env:
          NODE_ENV: production

      - name: Serve application
        run: pnpm start &
        env:
          PORT: 3000

      - name: Wait for server
        run: npx wait-on http://localhost:3000

      - name: Run Lighthouse CI
        run: |
          npm install -g @lhci/cli@0.13.x
          lhci autorun
        env:
          LHCI_GITHUB_APP_TOKEN: ${{ secrets.LHCI_GITHUB_APP_TOKEN }}

  security:
    name: Security Audit
    runs-on: ubuntu-latest
    needs: quality-checks
    if: github.event.inputs.skip_tests != 'true'

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup pnpm
        uses: pnpm/action-setup@v2
        with:
          version: 10

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'pnpm'

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Run security audit
        run: pnpm audit --fix

      - name: Run Snyk to check for vulnerabilities
        uses: snyk/actions/node@master
        continue-on-error: true
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
        with:
          args: --severity-threshold=high

  deploy:
    name: Deploy to Production
    runs-on: ubuntu-latest
    needs: [quality-checks, security]
    if: (github.ref == 'refs/heads/main' && github.event_name == 'push') || (github.event_name == 'workflow_dispatch' && github.event.inputs.skip_tests != 'true')
    environment: production

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup pnpm
        uses: pnpm/action-setup@v2
        with:
          version: 10

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'pnpm'

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Build application
        run: pnpm build
        env:
          NODE_ENV: production
          NEXT_PUBLIC_APP_URL: ${{ secrets.NEXT_PUBLIC_APP_URL }}
          NEXT_PUBLIC_APP_NAME: ${{ secrets.NEXT_PUBLIC_APP_NAME }}
          NEXT_PUBLIC_APP_DESCRIPTION: ${{ secrets.NEXT_PUBLIC_APP_DESCRIPTION }}
          NEXT_PUBLIC_ENABLE_ANALYTICS: ${{ secrets.NEXT_PUBLIC_ENABLE_ANALYTICS }}
          NEXT_PUBLIC_ENABLE_CONTACT_FORM: ${{ secrets.NEXT_PUBLIC_ENABLE_CONTACT_FORM }}
          NEXT_PUBLIC_ENABLE_BLOG: ${{ secrets.NEXT_PUBLIC_ENABLE_BLOG }}

      - name: Deploy to Vercel
        uses: amondnet/vercel-action@v25
        with:
          vercel-token: ${{ secrets.VERCEL_TOKEN }}
          vercel-org-id: ${{ secrets.VERCEL_ORG_ID }}
          vercel-project-id: ${{ secrets.VERCEL_PROJECT_ID }}
          vercel-args: ${{ github.event.inputs.environment == 'preview' && '' || '--prod' }}
          working-directory: ./

  quick-deploy:
    name: Quick Deploy (Manual Only)
    runs-on: ubuntu-latest
    if: github.event_name == 'workflow_dispatch' && github.event.inputs.skip_tests == 'true'

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup pnpm
        uses: pnpm/action-setup@v2
        with:
          version: 10

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'pnpm'

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Build application
        run: pnpm build
        env:
          NODE_ENV: production
          NEXT_PUBLIC_APP_URL: ${{ secrets.NEXT_PUBLIC_APP_URL }}
          NEXT_PUBLIC_APP_NAME: ${{ secrets.NEXT_PUBLIC_APP_NAME }}
          NEXT_PUBLIC_APP_DESCRIPTION: ${{ secrets.NEXT_PUBLIC_APP_DESCRIPTION }}
          NEXT_PUBLIC_ENABLE_ANALYTICS: ${{ secrets.NEXT_PUBLIC_ENABLE_ANALYTICS }}
          NEXT_PUBLIC_ENABLE_CONTACT_FORM: ${{ secrets.NEXT_PUBLIC_ENABLE_CONTACT_FORM }}
          NEXT_PUBLIC_ENABLE_BLOG: ${{ secrets.NEXT_PUBLIC_ENABLE_BLOG }}

      - name: Deploy to Vercel
        uses: amondnet/vercel-action@v25
        with:
          vercel-token: ${{ secrets.VERCEL_TOKEN }}
          vercel-org-id: ${{ secrets.VERCEL_ORG_ID }}
          vercel-project-id: ${{ secrets.VERCEL_PROJECT_ID }}
          vercel-args: ${{ github.event.inputs.environment == 'preview' && '' || '--prod' }}
          working-directory: ./
